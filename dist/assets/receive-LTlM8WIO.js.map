{"version":3,"file":"receive-LTlM8WIO.js","sources":["../../node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-compatible-network/styles.js","../../node_modules/@reown/appkit-ui/dist/esm/src/composites/wui-compatible-network/index.js","../../node_modules/@reown/appkit-scaffold-ui/dist/esm/src/views/w3m-wallet-receive-view/styles.js","../../node_modules/@reown/appkit-scaffold-ui/dist/esm/src/views/w3m-wallet-receive-view/index.js"],"sourcesContent":["import { css } from 'lit';\nexport default css `\n  button {\n    display: flex;\n    gap: var(--wui-spacing-xl);\n    width: 100%;\n    background-color: var(--wui-color-gray-glass-002);\n    border-radius: var(--wui-border-radius-xxs);\n    padding: var(--wui-spacing-m) var(--wui-spacing-s);\n  }\n\n  wui-text {\n    width: 100%;\n  }\n\n  wui-flex {\n    width: auto;\n  }\n\n  .network-icon {\n    width: var(--wui-spacing-2l);\n    height: var(--wui-spacing-2l);\n    border-radius: calc(var(--wui-spacing-2l) / 2);\n    overflow: hidden;\n    box-shadow:\n      0 0 0 3px var(--wui-color-gray-glass-002),\n      0 0 0 3px var(--wui-color-modal-bg);\n  }\n`;\n//# sourceMappingURL=styles.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport '../../components/wui-icon/index.js';\nimport '../../components/wui-image/index.js';\nimport '../../components/wui-text/index.js';\nimport '../../layout/wui-flex/index.js';\nimport { elementStyles, resetStyles } from '../../utils/ThemeUtil.js';\nimport { customElement } from '../../utils/WebComponentsUtil.js';\nimport styles from './styles.js';\nlet WuiCompatibleNetwork = class WuiCompatibleNetwork extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.networkImages = [''];\n        this.text = '';\n    }\n    render() {\n        return html `\n      <button>\n        <wui-text variant=\"small-400\" color=\"fg-200\">${this.text}</wui-text>\n        <wui-flex gap=\"3xs\" alignItems=\"center\">\n          ${this.networksTemplate()}\n          <wui-icon name=\"chevronRight\" size=\"sm\" color=\"fg-200\"></wui-icon>\n        </wui-flex>\n      </button>\n    `;\n    }\n    networksTemplate() {\n        const slicedNetworks = this.networkImages.slice(0, 5);\n        return html ` <wui-flex class=\"networks\">\n      ${slicedNetworks?.map(network => html ` <wui-flex class=\"network-icon\"> <wui-image src=${network}></wui-image> </wui-flex>`)}\n    </wui-flex>`;\n    }\n};\nWuiCompatibleNetwork.styles = [resetStyles, elementStyles, styles];\n__decorate([\n    property({ type: Array })\n], WuiCompatibleNetwork.prototype, \"networkImages\", void 0);\n__decorate([\n    property()\n], WuiCompatibleNetwork.prototype, \"text\", void 0);\nWuiCompatibleNetwork = __decorate([\n    customElement('wui-compatible-network')\n], WuiCompatibleNetwork);\nexport { WuiCompatibleNetwork };\n//# sourceMappingURL=index.js.map","import { css } from 'lit';\nexport default css `\n  wui-compatible-network {\n    margin-top: var(--wui-spacing-l);\n  }\n`;\n//# sourceMappingURL=styles.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { AccountController, AssetUtil, ChainController, CoreHelperUtil, RouterController, SnackController, ThemeController, getPreferredAccountType } from '@reown/appkit-controllers';\nimport { UiHelperUtil, customElement } from '@reown/appkit-ui';\nimport '@reown/appkit-ui/wui-chip-button';\nimport '@reown/appkit-ui/wui-compatible-network';\nimport '@reown/appkit-ui/wui-flex';\nimport '@reown/appkit-ui/wui-qr-code';\nimport '@reown/appkit-ui/wui-text';\nimport { W3mFrameRpcConstants } from '@reown/appkit-wallet/utils';\nimport styles from './styles.js';\nlet W3mWalletReceiveView = class W3mWalletReceiveView extends LitElement {\n    constructor() {\n        super();\n        this.unsubscribe = [];\n        this.address = AccountController.state.address;\n        this.profileName = AccountController.state.profileName;\n        this.network = ChainController.state.activeCaipNetwork;\n        this.unsubscribe.push(...[\n            AccountController.subscribe(val => {\n                if (val.address) {\n                    this.address = val.address;\n                    this.profileName = val.profileName;\n                }\n                else {\n                    SnackController.showError('Account not found');\n                }\n            })\n        ], ChainController.subscribeKey('activeCaipNetwork', val => {\n            if (val?.id) {\n                this.network = val;\n            }\n        }));\n    }\n    disconnectedCallback() {\n        this.unsubscribe.forEach(unsubscribe => unsubscribe());\n    }\n    render() {\n        if (!this.address) {\n            throw new Error('w3m-wallet-receive-view: No account provided');\n        }\n        const networkImage = AssetUtil.getNetworkImage(this.network);\n        return html ` <wui-flex\n      flexDirection=\"column\"\n      .padding=${['0', 'l', 'l', 'l']}\n      alignItems=\"center\"\n    >\n      <wui-chip-button\n        data-testid=\"receive-address-copy-button\"\n        @click=${this.onCopyClick.bind(this)}\n        text=${UiHelperUtil.getTruncateString({\n            string: this.profileName || this.address || '',\n            charsStart: this.profileName ? 18 : 4,\n            charsEnd: this.profileName ? 0 : 4,\n            truncate: this.profileName ? 'end' : 'middle'\n        })}\n        icon=\"copy\"\n        size=\"sm\"\n        imageSrc=${networkImage ? networkImage : ''}\n        variant=\"gray\"\n      ></wui-chip-button>\n      <wui-flex\n        flexDirection=\"column\"\n        .padding=${['l', '0', '0', '0']}\n        alignItems=\"center\"\n        gap=\"s\"\n      >\n        <wui-qr-code\n          size=${232}\n          theme=${ThemeController.state.themeMode}\n          uri=${this.address}\n          ?arenaClear=${true}\n          color=${ifDefined(ThemeController.state.themeVariables['--w3m-qr-color'])}\n          data-testid=\"wui-qr-code\"\n        ></wui-qr-code>\n        <wui-text variant=\"paragraph-500\" color=\"fg-100\" align=\"center\">\n          Copy your address or scan this QR code\n        </wui-text>\n      </wui-flex>\n      ${this.networkTemplate()}\n    </wui-flex>`;\n    }\n    networkTemplate() {\n        const requestedCaipNetworks = ChainController.getAllRequestedCaipNetworks();\n        const isNetworkEnabledForSmartAccounts = ChainController.checkIfSmartAccountEnabled();\n        const caipNetwork = ChainController.state.activeCaipNetwork;\n        const namespaceNetworks = requestedCaipNetworks.filter(network => network?.chainNamespace === caipNetwork?.chainNamespace);\n        if (getPreferredAccountType(caipNetwork?.chainNamespace) ===\n            W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT &&\n            isNetworkEnabledForSmartAccounts) {\n            if (!caipNetwork) {\n                return null;\n            }\n            return html `<wui-compatible-network\n        @click=${this.onReceiveClick.bind(this)}\n        text=\"Only receive assets on this network\"\n        .networkImages=${[AssetUtil.getNetworkImage(caipNetwork) ?? '']}\n      ></wui-compatible-network>`;\n        }\n        const slicedNetworks = namespaceNetworks\n            ?.filter(network => network?.assets?.imageId)\n            ?.slice(0, 5);\n        const imagesArray = slicedNetworks.map(AssetUtil.getNetworkImage).filter(Boolean);\n        return html `<wui-compatible-network\n      @click=${this.onReceiveClick.bind(this)}\n      text=\"Only receive assets on these networks\"\n      .networkImages=${imagesArray}\n    ></wui-compatible-network>`;\n    }\n    onReceiveClick() {\n        RouterController.push('WalletCompatibleNetworks');\n    }\n    onCopyClick() {\n        try {\n            if (this.address) {\n                CoreHelperUtil.copyToClopboard(this.address);\n                SnackController.showSuccess('Address copied');\n            }\n        }\n        catch {\n            SnackController.showError('Failed to copy');\n        }\n    }\n};\nW3mWalletReceiveView.styles = styles;\n__decorate([\n    state()\n], W3mWalletReceiveView.prototype, \"address\", void 0);\n__decorate([\n    state()\n], W3mWalletReceiveView.prototype, \"profileName\", void 0);\n__decorate([\n    state()\n], W3mWalletReceiveView.prototype, \"network\", void 0);\nW3mWalletReceiveView = __decorate([\n    customElement('w3m-wallet-receive-view')\n], W3mWalletReceiveView);\nexport { W3mWalletReceiveView };\n//# sourceMappingURL=index.js.map"],"names":["styles$1","css","__decorate","decorators","target","key","desc","c","r","d","i","WuiCompatibleNetwork","LitElement","html","slicedNetworks","network","resetStyles","elementStyles","styles","property","customElement","W3mWalletReceiveView","AccountController","ChainController","val","SnackController","unsubscribe","networkImage","AssetUtil","UiHelperUtil","ThemeController","ifDefined","requestedCaipNetworks","isNetworkEnabledForSmartAccounts","caipNetwork","namespaceNetworks","getPreferredAccountType","W3mFrameRpcConstants","imagesArray","_a","RouterController","CoreHelperUtil","state"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}